> import rospy                                  ==> Import the rospy package

> rospy.init_node("node_name")                  ==> Initialize a node with the name node_name

> rospy.loginfo                                 ==> Print an info message
> rospy.logdebug                                ==> Debugging
> rospy.logerr                                  ==> Print an error message
> rospy.logwarn                                 ==> Print a warning message

> rospy.sleep                                   ==> Interrupt the progrm execution for a delay

> rate = rospy.Rate(n)                          ==> Create a rate object, n Hz frequency
> rate.sleep()                                  ==> Sleep for 1 / n second

> pub = rospy.Publisher(< t >, < d >, < q >)    ==> Create a publisher object, t for topic, d for data_class and q for queue size
> msq = < d >()                                 ==> Crate an object message from your data_class
> msg.linear.x = ...                            ==> Fill the message fields
> pub.publish(msg)                              ==> Publish the message

> sub = rospy.Subscriber(< t >, < d >, < c >)   ==> Create a subscriber object, t for topic, d for data_class and c for callback
> rospy.spin()                                  ==> This creates an infinite loop

> rospy.wait_for_service(< s >)                 ==> Wait for the service s to be up and running
> srv_client = rospy.ServiceProxy(< s >, < t >) ==> Create a service client
> response = srv_client(< args >)               ==> Call the service client and get the response
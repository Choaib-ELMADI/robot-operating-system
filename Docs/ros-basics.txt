=> ROS Master:
    * A crucial component that facilitates communication between different nodes.
    * It acts as a central coordinator that provides name registration and lookup services to the nodes in the ROS system.

=> ROS Node:
    * A fundamental unit of computation.
    * It is a process that performs a specific task within a ROS based application.

=> Create a ROS Project:
    * Starting a new ROS project is conventionly done by creating a "Catkin" workspace.
    * Inside the workspace folder, we create an src folder.
    * Compile and initialize the project workspace.
    * You need to source the "setup.bash" program, file inside "devel" inside project workspace.

=> ROS Project Structure:
    * Packages are created inside the src folder.
    * Each package can have many nodes.

=> The #!/usr/bin/env python3
    * This line at the beginning of a Python script is called a shebang (or hashbang) line.
    * It tells the operating system how to execute the script.
    * Without the shebang line, you would have to explicitly invoke the interpreter every time you run the script.

=> ROS Topics:
    * ROS topics are a way for different nodes to talk to each other by sending and receiving messages.
    * Publisher: publishing node, a sensor node that publishes some data to a topic.
    * Subscriber: subscribing node, a processing node that subscribes to a topic to receive data from it.
    * The type of a topic refers to the message type:
        - std_msgs/String: A simple string message
        - std_msgs/Int32: A 32-bit integer message
        - std_msgs/Float32: A 32-bit floating-point number message